// Wiring/Arduino code:
// Read data from the serial and turn ON or OFF a light depending on the value
#include <Servo.h>

Servo arm;

int pos = 0;    // variable to store the servo position
byte attcmd; // Data received from the serial port
int ledForce = 13; // Set the pin to digital I/O 4
int ledStable = 12;
int secondCounter = 0;
int ledSec;
int ledSec1 = 2;
int ledSec2 = 3;
int ledSec3 = 4;
int ledSec4 = 5;
int ledSec5 = 6;
int buzzer = 38;
long lastStartTime;

enum states {
  STABLE,
  FORCE,
  WIN
};

states state;
//int force_time;
//int force_count;

void setup() {
  pinMode(ledForce, OUTPUT); // Set pin as OUTPUT
  pinMode(ledStable, OUTPUT);
  pinMode(ledSec1, OUTPUT);
  pinMode(ledSec2, OUTPUT);
  pinMode(ledSec3, OUTPUT);
  pinMode(ledSec4, OUTPUT);
  pinMode(ledSec5, OUTPUT);
  pinMode(buzzer, OUTPUT);
  Serial.begin(9600); // Start serial communication at 9600 bps
  arm.attach(8); // attaches the servo on pin 9 to the servo object
  lastStartTime = millis();

  state = STABLE;
}

void loop() {

  switch (state) {
    case STABLE:
      while (Serial.available()) { // If data is available to read,
        attcmd = Serial.read(); // read it and store it in attcmd
      }
      resetTimers();

      digitalWrite(ledStable, HIGH);
      digitalWrite(ledForce, LOW);
      digitalWrite(ledSec1, LOW);
      digitalWrite(ledSec2, LOW);
      digitalWrite(ledSec3, LOW);
      digitalWrite(ledSec4, LOW);
      digitalWrite(ledSec5, LOW);

      if (attcmd == 0) { // If attention level is eual to 0
        arm.write(0); // Move arm 0
        delay(15);
      }
      if (attcmd > 10) { // If attention level is eual to 10
        arm.write(20); // Move arm 20 degrees
        delay(15);
      }
      if (attcmd > 20) {
        arm.write(45);
        delay(15);
      }
      if (attcmd > 45) {
        arm.write(60);
        delay(15);
      }
      if (attcmd > 60) {
        arm.write(90);
        delay(15);
        //reset second counter and last start time
      }
      if (attcmd > 70) {
        arm.write(110);
        delay(15);
        state = FORCE;
      }
      if (attcmd > 90) {
        arm.write(180);
        delay(15);
        state = FORCE;
      }
      delay(50); // Wait 50 milliseconds for next reading

      break;

    case FORCE:
      while (Serial.available()) { // If data is available to read,
        attcmd = Serial.read(); // read it and store it in attcmd
      }
      countingSeconds();
      digitalWrite(ledStable, LOW);
      digitalWrite(ledForce, HIGH);
      
      if (attcmd > 70) {
        arm.write(110);
        delay(15);
      }
      if (attcmd > 90) {
        arm.write(180);
        delay(15);
      }
      if (attcmd < 70) {
        state = STABLE;
      }
      delay(50); // Wait 50 milliseconds for next reading

      break;

    case WIN:
      digitalWrite(ledSec5, HIGH);
      tone(buzzer, 500, 200);
      delay(200);
      tone(buzzer, 500, 200);
      delay(200);
      tone(buzzer, 500, 200);
      delay(200);
      tone(buzzer, 800, 150);
      delay(150);
      tone(buzzer, 500, 500);
      delay(500);
      tone(buzzer, 600, 1000);
      delay(10000);

      break;

  }
}

void countingSeconds() {
  if (millis() - lastStartTime > 1000) {
    secondCounter++;
    Serial.print(secondCounter);
    Serial.println(" second passed");
    //turn on one led
    digitalWrite(ledSec + secondCounter, HIGH);
    lastStartTime = millis();
  }


  if (secondCounter == 5) {
    state = WIN;
    //Serial.println("you win");

    //reset state
  }
}

void resetTimers() {
  secondCounter = 0;
  lastStartTime = millis();
}
